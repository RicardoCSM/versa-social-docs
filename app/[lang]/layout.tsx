import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import type { Translations } from "fumadocs-ui/i18n";
import { RootProvider } from "fumadocs-ui/provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const ptBR: Partial<Translations> = {
  search: "Procurar",
  searchNoResult: "Nenhum resultado encontrado",
  toc: "Sumário",
  tocNoHeadings: "Esta página não possui títulos",
  lastUpdate: "Última atualização",
  chooseLanguage: "Escolha o idioma",
  nextPage: "Próxima página",
  previousPage: "Página anterior",
  chooseTheme: "Escolha o tema",
  editOnGithub: "Editar no GitHub",
};

const locales = [
  {
    name: "Português (Brasil)",
    locale: "pt-BR",
  },
];

export default async function RootLayout({
  params,
  children,
}: {
  params: Promise<{ lang: string }>;
  children: React.ReactNode;
}) {
  const lang = (await params).lang;
  const normalizedLang = lang.replace("-", "").toLowerCase();

  const translationsMap: Record<string, Partial<Translations>> = {
    ptbr: ptBR,
  };

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <RootProvider
          i18n={{
            locale: lang,
            locales,
            translations: translationsMap[normalizedLang],
          }}
        >
          {children}
        </RootProvider>
      </body>
    </html>
  );
}
