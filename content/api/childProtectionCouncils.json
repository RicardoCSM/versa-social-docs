{
  "openapi": "3.1.1",
  "info": {
    "title": "Lista de Conselhos Tutelares API",
    "version": "1.0.0",
    "description": "Endpoints do módulo Conselhos Tutelares."
  },
  "servers": [
    {
      "url": "https://dev-api.versasocial.com.br/api/v1",
      "description": "Desenvolvimento"
    },
    {
      "url": "https://homo-api.versasocial.com.br/api/v1",
      "description": "Homologação"
    },
    {
      "url": "https://api.versasocial.com.br/api/v1",
      "description": "Produção"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Conselhos Tutelares",
      "description": "Operações do módulo Conselhos Tutelares"
    }
  ],
  "paths": {
    "/child-protection-councils": {
      "get": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Listar conselhos tutelares",
        "description": "Lista paginada de itens do módulo Conselhos Tutelares.",
        "operationId": "listChildProtectionCouncilsItems",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/per_page" },
          { "$ref": "#/components/parameters/sort_field" },
          { "$ref": "#/components/parameters/sort_order" },
          { "$ref": "#/components/parameters/search" },
          {
            "name": "name",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtro por nome da unidade (busca parcial)"
          },
          {
            "name": "code",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtro por código (busca parcial)"
          },
          {
            "name": "active",
            "in": "query",
            "schema": { "type": "boolean" },
            "description": "Filtro por status ativo"
          },
          {
            "name": "begin",
            "in": "query",
            "schema": { "type": "string", "format": "date" },
            "description": "Filtro por data de início (maior ou igual)"
          },
          {
            "name": "end",
            "in": "query",
            "schema": { "type": "string", "format": "date" },
            "description": "Filtro por data de fim (menor ou igual)"
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": { "type": "string", "format": "date" },
            "description": "Filtro por data de criação (igual)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemResource"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/complaints": {
      "post": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Criar denúncia",
        "description": "Cria uma nova denúncia associada aos conselhos tutelares.",
        "operationId": "createComplaint",
        "parameters": [{ "$ref": "#/components/parameters/X-Domain" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComplaintDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Denúncia criada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/UnprocessableEntity" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/complaints/details/{protocol_number}": {
      "get": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Detalhes da denúncia",
        "description": "Obtém os detalhes de uma denúncia pelo número de protocolo.",
        "operationId": "getComplaintDetails",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          {
            "name": "protocol_number",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Número de protocolo da denúncia"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da denúncia",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    },
    "/complaints/{uuid}": {
      "get": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Obter denúncia",
        "description": "Obtém os detalhes de uma denúncia pelo ID.",
        "operationId": "getComplaint",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da denúncia",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      },
      "put": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Atualizar denúncia",
        "description": "Atualiza os dados de uma denúncia pelo ID.",
        "operationId": "updateComplaint",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComplaintDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Denúncia atualizada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/UnprocessableEntity" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      },
      "delete": {
        "tags": ["Conselhos Tutelares"],
        "summary": "Excluir denúncia",
        "description": "Exclui uma denúncia pelo ID.",
        "operationId": "deleteComplaint",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "responses": {
          "204": { "description": "Denúncia excluída" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Bearer token"
      }
    },
    "parameters": {
      "X-Domain": {
        "name": "X-Domain",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "example": "development.versasocial.com.br"
        },
        "description": "Domínio do tenant."
      },
      "Id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "description": "Identificador do recurso."
      },
      "page": {
        "name": "page",
        "in": "query",
        "schema": { "type": "integer", "minimum": 1, "default": 1 },
        "description": "Página"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "schema": {
          "oneOf": [
            { "type": "integer", "minimum": 1, "default": 20 },
            { "type": "string", "enum": ["all"] }
          ]
        },
        "description": "Itens por página ou 'all'."
      },
      "sort_field": {
        "name": "sort_field",
        "in": "query",
        "schema": { "type": "string", "example": "created_at" },
        "description": "Campo de ordenação"
      },
      "sort_order": {
        "name": "sort_order",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "asc"
        },
        "description": "Direção da ordenação"
      },
      "search": {
        "name": "search",
        "in": "query",
        "schema": { "type": "string" },
        "description": "Busca textual"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Não autenticado",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "NotFound": {
        "description": "Recurso não encontrado",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Erro de validação",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "ServerError": {
        "description": "Erro interno",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    },
    "schemas": {
      "ItemResource": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "created_at", "updated_at"]
      },
      "ItemResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/ItemResource" }
        }
      },
      "PaginatedItemResource": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ItemResource" }
          },
          "links": { "$ref": "#/components/schemas/Links" },
          "meta": { "$ref": "#/components/schemas/Meta" }
        }
      },
      "CreateComplaintDTO": {
        "type": "object",
        "required": [
          "unit_id",
          "is_anonymous",
          "victim_description",
          "violence_type",
          "urgency_level",
          "description",
          "aggressor_info"
        ],
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID da unidade"
          },
          "is_anonymous": {
            "type": "boolean",
            "description": "Se a denúncia é anônima"
          },
          "denunciator": {
            "type": "object",
            "description": "Dados do denunciante"
          },
          "victim": {
            "type": "object",
            "description": "Dados da vítima"
          },
          "victim_description": {
            "type": "string",
            "description": "Descrição da vítima"
          },
          "violence_type": {
            "type": "string",
            "description": "Tipo de violência"
          },
          "urgency_level": {
            "type": "string",
            "description": "Nível de urgência"
          },
          "description": {
            "type": "string",
            "description": "Descrição da denúncia"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "Endereço do ocorrido"
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Data do ocorrido"
          },
          "aggressor_info": {
            "type": "string",
            "description": "Informações do agressor"
          },
          "aggressor_relation": {
            "type": "string",
            "nullable": true,
            "description": "Relação do agressor com a vítima"
          },
          "other_aggressor_relation": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "description": "Outra relação do agressor"
          },
          "witnesses": {
            "type": "string",
            "nullable": true,
            "description": "Testemunhas"
          },
          "observations": {
            "type": "string",
            "nullable": true,
            "description": "Observações"
          },
          "attachments": {
            "type": "array",
            "maxItems": 5,
            "items": {
              "type": "string"
            },
            "description": "Anexos"
          }
        }
      },
      "CreateItemDTO": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { "type": "string", "example": "Nome do item" }
        }
      },
      "Links": {
        "type": "object",
        "properties": {
          "first": { "type": "string", "nullable": true },
          "last": { "type": "string", "nullable": true },
          "prev": { "type": "string", "nullable": true },
          "next": { "type": "string", "nullable": true }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "current_page": { "type": "integer" },
          "last_page": { "type": "integer" },
          "per_page": { "type": "integer" },
          "total": { "type": "integer" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      }
    }
  }
}
