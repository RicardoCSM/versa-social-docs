{
  "openapi": "3.1.1",
  "info": {
    "title": "Registro de Evolução API",
    "version": "1.0.0",
    "description": "Endpoints do módulo Registro de Evolução."
  },
  "servers": [
    {
      "url": "https://dev-api.versasocial.com.br/api/v1",
      "description": "Desenvolvimento"
    },
    {
      "url": "https://homo-api.versasocial.com.br/api/v1",
      "description": "Homologação"
    },
    {
      "url": "https://api.versasocial.com.br/api/v1",
      "description": "Produção"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Registro de Evolução",
      "description": "Operações do módulo Registro de Evolução"
    }
  ],
  "paths": {
    "/evolutions": {
      "get": {
        "tags": ["Registro de Evolução"],
        "summary": "Listar registros de evolução",
        "description": "Lista paginada de registros do módulo Registro de Evolução.",
        "operationId": "listSocialEvolutionItems",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/per_page" },
          { "$ref": "#/components/parameters/sort_field" },
          { "$ref": "#/components/parameters/sort_order" },
          { "$ref": "#/components/parameters/search" },
          {
            "name": "user_id",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtrar por ID do usuário"
          },
          {
            "name": "social_record_id",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtrar por ID do registro social"
          },
          {
            "name": "family_id",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtrar por ID da família"
          },
          {
            "name": "begin",
            "in": "query",
            "schema": { "type": "string", "format": "date" },
            "description": "Data de início (filtro maior ou igual)"
          },
          {
            "name": "end",
            "in": "query",
            "schema": { "type": "string", "format": "date" },
            "description": "Data de fim (filtro menor ou igual)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemResource"
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/ServerError" }
        }
      },
      "post": {
        "tags": ["Registro de Evolução"],
        "summary": "Criar registro de evolução",
        "description": "Cria um novo registro de evolução.",
        "operationId": "createSocialEvolutionItem",
        "parameters": [{ "$ref": "#/components/parameters/X-Domain" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSocialEvolutionDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "422": { "$ref": "#/components/responses/UnprocessableEntity" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },
    "/evolutions/{id}": {
      "get": {
        "tags": ["Registro de Evolução"],
        "summary": "Detalhar registro de evolução específico",
        "description": "Detalha um registro de evolução específico pelo seu ID.",
        "operationId": "getRegistroDeEvolucaoItem",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "responses": {
          "200": {
            "description": "Detalhe do registro de evolução",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      },
      "put": {
        "tags": ["Registro de Evolução"],
        "summary": "Atualizar registro de evolução",
        "description": "Atualiza um registro de evolução existente pelo seu ID.",
        "operationId": "updateSocialEvolutionItem",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSocialEvolutionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Atualizado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ItemResponse" }
              }
            }
          },
          "422": { "$ref": "#/components/responses/UnprocessableEntity" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      },
      "delete": {
        "tags": ["Registro de Evolução"],
        "summary": "Excluir registro de evolução",
        "description": "Exclui um registro de evolução existente pelo seu ID.",
        "operationId": "deleteSocialEvolutionItem",
        "parameters": [
          { "$ref": "#/components/parameters/X-Domain" },
          { "$ref": "#/components/parameters/Id" }
        ],
        "responses": {
          "204": { "description": "Excluído com sucesso" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Bearer token"
      }
    },
    "parameters": {
      "X-Domain": {
        "name": "X-Domain",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "example": "development.versasocial.com.br"
        },
        "description": "Domínio do tenant."
      },
      "Id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "description": "Identificador do recurso."
      },
      "page": {
        "name": "page",
        "in": "query",
        "schema": { "type": "integer", "minimum": 1, "default": 1 },
        "description": "Página"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "schema": {
          "oneOf": [
            { "type": "integer", "minimum": 1, "default": 20 },
            { "type": "string", "enum": ["all"] }
          ]
        },
        "description": "Itens por página ou 'all'."
      },
      "sort_field": {
        "name": "sort_field",
        "in": "query",
        "schema": { "type": "string", "example": "created_at" },
        "description": "Campo de ordenação"
      },
      "sort_order": {
        "name": "sort_order",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "asc"
        },
        "description": "Direção da ordenação"
      },
      "search": {
        "name": "search",
        "in": "query",
        "schema": { "type": "string" },
        "description": "Busca textual"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Não autenticado",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "NotFound": {
        "description": "Recurso não encontrado",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Erro de validação",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "ServerError": {
        "description": "Erro interno",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    },
    "schemas": {
      "CreateSocialEvolutionDTO": {
        "type": "object",
        "required": [
          "operator_id",
          "family_id",
          "user_id",
          "unit_id",
          "social_record_id",
          "rating"
        ],
        "properties": {
          "operator_id": {
            "type": "string",
            "description": "ID do operador"
          },
          "family_id": {
            "type": "string",
            "description": "ID da família"
          },
          "user_id": {
            "type": "string",
            "description": "ID do usuário"
          },
          "unit_id": {
            "type": "string",
            "description": "ID da unidade"
          },
          "social_record_id": {
            "type": "string",
            "description": "ID do atendimento"
          },
          "rating": {
            "type": "integer",
            "minimum": 0,
            "maximum": 5,
            "description": "Avaliação de 0 a 5"
          }
        }
      },
      "ItemResource": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "created_at", "updated_at"]
      },
      "ItemResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/ItemResource" }
        }
      },
      "PaginatedItemResource": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ItemResource" }
          },
          "links": { "$ref": "#/components/schemas/Links" },
          "meta": { "$ref": "#/components/schemas/Meta" }
        }
      },
      "CreateItemDTO": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { "type": "string", "example": "Nome do item" }
        }
      },
      "Links": {
        "type": "object",
        "properties": {
          "first": { "type": "string", "nullable": true },
          "last": { "type": "string", "nullable": true },
          "prev": { "type": "string", "nullable": true },
          "next": { "type": "string", "nullable": true }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "current_page": { "type": "integer" },
          "last_page": { "type": "integer" },
          "per_page": { "type": "integer" },
          "total": { "type": "integer" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      }
    }
  }
}
