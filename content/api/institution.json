{
  "openapi": "3.1.1",
  "info": {
    "title": "Instituição API",
    "version": "1.0.0",
    "description": "Endpoints do módulo Instituição."
  },
  "servers": [
    {
      "url": "https://dev-api.versasocial.com.br/api/v1",
      "description": "Desenvolvimento"
    },
    {
      "url": "https://homo-api.versasocial.com.br/api/v1",
      "description": "Homologação"
    },
    {
      "url": "https://api.versasocial.com.br/api/v1",
      "description": "Produção"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Instituição",
      "description": "Operações do módulo Instituição"
    }
  ],
  "paths": {
    "/institutions": {
      "get": {
        "tags": ["Instituição"],
        "summary": "Listar itens",
        "description": "Lista paginada de itens do módulo Instituição.",
        "operationId": "institutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/sort_field"
          },
          {
            "$ref": "#/components/parameters/sort_order"
          },
          {
            "$ref": "#/components/parameters/search"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": ["Instituição"],
        "summary": "Criar item",
        "description": "Cria uma instituição.",
        "operationId": "createInstituicaoItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstitutionDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/institutions/{uuid}": {
      "put": {
        "tags": ["Instituição"],
        "summary": "Atualizar item",
        "description": "Atualiza uma instituição.",
        "operationId": "updateInstituicaoItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstitutionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Instituição"],
        "summary": "Deletar Instituição",
        "description": "Deleta uma instituição.",
        "operationId": "deleteInstituicao",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Deletado"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/institutions/{uuid}/members": {
      "get": {
        "tags": ["Instituição"],
        "summary": "Listar membros da instituição",
        "description": "Lista paginada de membros vinculados a uma instituição.",
        "operationId": "listInstitutionMembers",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/sort_field"
          },
          {
            "$ref": "#/components/parameters/sort_order"
          },
          {
            "$ref": "#/components/parameters/search"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de membros",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": ["Instituição"],
        "summary": "Adicionar membro à instituição",
        "description": "Adiciona um membro a uma instituição.",
        "operationId": "addInstitutionMember",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro adicionado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/institutions/{uuid}/members/{member_id}": {
      "delete": {
        "tags": ["Instituição"],
        "summary": "Remover membro da instituição",
        "description": "Remove um membro de uma instituição.",
        "operationId": "removeInstitutionMember",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "204": {
            "description": "Membro removido"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["Instituição"],
        "summary": "Obter membro da instituição",
        "description": "Obtém os detalhes de um membro específico de uma instituição.",
        "operationId": "getInstitutionMember",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do membro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["Instituição"],
        "summary": "Atualizar membro da instituição",
        "description": "Atualiza os detalhes de um membro específico de uma instituição.",
        "operationId": "updateInstitutionMember",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Domain"
          },
          {
            "$ref": "#/components/parameters/Uuid"
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstitutionMemberDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Membro atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT Bearer token"
      }
    },
    "parameters": {
      "X-Domain": {
        "name": "X-Domain",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "example": "development.versasocial.com.br"
        },
        "description": "Domínio do tenant."
      },
      "Id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Identificador do recurso."
      },
      "Uuid": {
        "name": "uuid",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "UUID do recurso."
      },
      "page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        },
        "description": "Página"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            {
              "type": "string",
              "enum": ["all"]
            }
          ]
        },
        "description": "Itens por página ou 'all'."
      },
      "sort_field": {
        "name": "sort_field",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "created_at"
        },
        "description": "Campo de ordenação"
      },
      "sort_order": {
        "name": "sort_order",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "asc"
        },
        "description": "Direção da ordenação"
      },
      "search": {
        "name": "search",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Busca textual"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Não autenticado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Recurso não encontrado",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Erro de validação",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServerError": {
        "description": "Erro interno",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "CreateInstitutionMemberDTO": {
        "type": "object",
        "required": ["id", "name", "role", "cpf", "contacts"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "uuid do usuário"
          },
          "name": {
            "type": "string",
            "example": "Nome do usuário"
          },
          "role": {
            "type": "string",
            "example": "Função do usuário na instituição"
          },
          "cpf": {
            "type": "string",
            "example": "000.000.000-00"
          },
          "contacts": {
            "type": "array",
            "example": [
              {
                "type": "email",
                "value": "contato@exemplo.com"
              }
            ]
          }
        }
      },
      "CreateInstitutionDTO": {
        "type": "object",
        "required": ["name", "address"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Nome da Instituição"
          },
          "address": {
            "type": "string",
            "example": "Endereço da Instituição"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/logo.png"
          },
          "logo_extension": {
            "type": "string",
            "example": "png, jpg"
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "example": "uuid da instituição pai"
          },
          "cnpj": {
            "type": "string",
            "example": "00.000.000/0000-00"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "example": [
              {
                "type": "email",
                "value": "contato@exemplo.com"
              }
            ]
          }
        }
      },
      "UpdateInstitutionDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Nome da Instituição"
          },
          "address": {
            "type": "string",
            "example": "Endereço da Instituição"
          },
          "logo": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/logo.png"
          },
          "logo_extension": {
            "type": "string",
            "example": "png, jpg"
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "example": "uuid da instituição pai"
          },
          "cnpj": {
            "type": "string",
            "example": "00.000.000/0000-00"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "example": [
              {
                "type": "email",
                "value": "contato@exemplo.com"
              }
            ]
          }
        }
      },
      "ItemResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name", "created_at", "updated_at"]
      },
      "ItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ItemResource"
          }
        }
      },
      "PaginatedItemResource": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "CreateItemDTO": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Nome do item"
          }
        }
      },
      "Links": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
